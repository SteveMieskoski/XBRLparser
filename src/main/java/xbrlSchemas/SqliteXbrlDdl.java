package xbrlSchemas;

public interface SqliteXbrlDdl {

  static String drop =
      "-- drop tables and sequences\n"
          + "DROP TABLE IF EXISTS entity;\n"
          + "DROP TABLE IF EXISTS former_entity;\n"
          + "DROP TABLE IF EXISTS filing;\n"
          + "DROP TABLE IF EXISTS report;\n"
          + "DROP TABLE IF EXISTS document;\n"
          + "DROP TABLE IF EXISTS referenced_documents;\n"
          + "DROP TABLE IF EXISTS aspect;\n"
          + "DROP TABLE IF EXISTS data_type;\n"
          + "DROP TABLE IF EXISTS role_type;\n"
          + "DROP TABLE IF EXISTS arcrole_type;\n"
          + "DROP TABLE IF EXISTS used_on;\n"
          + "DROP TABLE IF EXISTS resource;\n"
          + "DROP TABLE IF EXISTS relationship_set;\n"
          + "DROP TABLE IF EXISTS relationship;\n"
          + "DROP TABLE IF EXISTS root;\n"
          + "DROP TABLE IF EXISTS data_point;\n"
          + "DROP TABLE IF EXISTS entity_identifier;\n"
          + "DROP TABLE IF EXISTS period;\n"
          + "DROP TABLE IF EXISTS unit;\n"
          + "DROP TABLE IF EXISTS unit_measure;\n"
          + "DROP TABLE IF EXISTS aspect_value_selection_set;\n"
          + "DROP TABLE IF EXISTS aspect_value_selection;\n"
          + "DROP TABLE IF EXISTS table_data_points;\n"
          + "DROP TABLE IF EXISTS message;\n"
          + "DROP TABLE IF EXISTS message_reference;\n"
          + "DROP TABLE IF EXISTS industry;\n"
          + "DROP TABLE IF EXISTS industry_level;\n"
          + "DROP TABLE IF EXISTS industry_structure;\n";

  static String entity =
      "CREATE TABLE entity (\n"
          + "    entity_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    legal_entity_number TEXT, -- LEI\n"
          + "    file_number TEXT, -- authority internal number\n"
          + "    reference_number TEXT, -- external code, e.g. CIK\n"
          + "    tax_number TEXT,\n"
          + "    standard_industry_code INTEGER DEFAULT (-1) NOT NULL,\n"
          + "    name TEXT,\n"
          + "    legal_state TEXT,\n"
          + "    phone TEXT,\n"
          + "    phys_addr1 TEXT, -- physical (real) address\n"
          + "    phys_addr2 TEXT,\n"
          + "    phys_city TEXT,\n"
          + "    phys_state TEXT,\n"
          + "    phys_zip TEXT,\n"
          + "    phys_country TEXT,\n"
          + "    mail_addr1 TEXT, -- mailing (postal) address\n"
          + "    mail_addr2 TEXT,\n"
          + "    mail_city TEXT,\n"
          + "    mail_state TEXT,\n"
          + "    mail_zip TEXT,\n"
          + "    mail_country TEXT,\n"
          + "    fiscal_year_end TEXT,\n"
          + "    filer_category TEXT,\n"
          + "    public_float double precision,\n"
          + "    trading_symbol TEXT\n"
          + ");\n"
          + "CREATE INDEX entity_index02 ON entity (file_number);\n"
          + "CREATE INDEX entity_index03 ON entity (reference_number);\n"
          + "CREATE INDEX entity_index04 ON entity (legal_entity_number);\n"
          + "CREATE INDEX entity_index05 ON entity (legal_entity_number, file_number);\n";

  static String former_entity =
      "CREATE TABLE former_entity (\n"
          + "    entity_id INTEGER NOT NULL,\n"
          + "    date_changed TEXT,\n"
          + "    former_name TEXT\n"
          + ");\n"
          + "CREATE INDEX former_entity_index02 ON former_entity (entity_id);\n";
  static String filing =
      "CREATE TABLE filing (\n"
          + "    filing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    filing_number TEXT NOT NULL,\n"
          + "    form_type TEXT,\n"
          + "    entity_id INTEGER NOT NULL,\n"
          + "    reference_number TEXT, -- external code, e.g. CIK\n"
          + "    accepted_timestamp TEXT,\n"
          + "    is_most_current BOOLEAN DEFAULT false NOT NULL,\n"
          + "    filing_date TEXT NOT NULL,\n"
          + "    creation_software TEXT,\n"
          + "    authority_html_url TEXT,\n"
          + "    entry_url TEXT\n"
          + ");\n"
          + "CREATE UNIQUE INDEX filing_index02 ON filing  (filing_number);\n"
          + "CREATE INDEX filing_index03 ON filing  (entity_id);\n";
  static String report =
      "CREATE TABLE report (\n"
          + "    report_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    filing_id INTEGER NOT NULL,\n"
          + "    report_data_doc_id INTEGER,  -- instance or primary inline document\n"
          + "    report_schema_doc_id INTEGER,  -- extension schema of the report (primary)\n"
          + "    agency_schema_doc_id INTEGER,  -- agency schema (receiving authority)\n"
          + "    standard_schema_doc_id INTEGER  -- e.g., IFRS, XBRL-US, or EDInet schema\n"
          + ");\n"
          + "CREATE INDEX report_index02 ON report(filing_id);\n";
  static String document =
      "CREATE TABLE document (\n"
          + "    document_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_url TEXT NOT NULL,\n"
          + "    document_type TEXT,  -- ModelDocument.Type string value\n"
          + "    namespace TEXT  -- targetNamespace if schema else NULL\n"
          + ");\n"
          + "CREATE INDEX document_index02 ON document (document_url);\n";
  static String referenced_documents =
      "CREATE TABLE referenced_documents (\n"
          + "    object_id INTEGER NOT NULL,\n"
          + "    document_id INTEGER NOT NULL\n"
          + ");\n"
          + "CREATE INDEX referenced_documents_index01 ON referenced_documents  (object_id);\n"
          + "CREATE UNIQUE INDEX referenced_documents_index02 ON referenced_documents  (object_id, document_id);\n";

  static String aspect =
      "CREATE TABLE aspect (\n"
          + "    aspect_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_id INTEGER NOT NULL,\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    qname TEXT NOT NULL,  -- clark notation qname (do we need this?)\n"
          + "    name TEXT NOT NULL,  -- local qname\n"
          + "    datatype_id INTEGER,\n"
          + "    base_type TEXT, -- xml base type if any\n"
          + "    substitution_group_aspect_id INTEGER,\n"
          + "    balance TEXT,\n"
          + "    period_type TEXT,\n"
          + "    abstract BOOLEAN NOT NULL,\n"
          + "    nillable BOOLEAN NOT NULL,\n"
          + "    is_numeric BOOLEAN NOT NULL,\n"
          + "    is_monetary BOOLEAN NOT NULL,\n"
          + "    is_text_block BOOLEAN NOT NULL\n"
          + ");\n"
          + "CREATE INDEX aspect_index02 ON aspect  (document_id);\n"
          + "CREATE INDEX aspect_index03 ON aspect (qname);\n";
  static String data_type =
      "CREATE TABLE data_type (\n"
          + "    data_type_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_id INTEGER NOT NULL,\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    qname TEXT NOT NULL,  -- clark notation qname (do we need this?)\n"
          + "    name TEXT NOT NULL,  -- local qname\n"
          + "    base_type TEXT, -- xml base type if any\n"
          + "    derived_from_type_id INTEGER\n"
          + ");\n"
          + "CREATE INDEX data_type_index02 ON data_type (document_id);\n"
          + "CREATE INDEX data_type_index03 ON data_type (qname);\n";
  static String role_type =
      "CREATE TABLE role_type (\n"
          + "    role_type_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_id INTEGER NOT NULL,\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    role_uri TEXT NOT NULL,\n"
          + "    definition TEXT\n"
          + ");\n"
          + "CREATE INDEX role_type_index02 ON role_type (document_id);\n"
          + "CREATE INDEX role_type_index03 ON role_type (role_uri);\n";
  static String arcrole_type =
      "CREATE TABLE arcrole_type (\n"
          + "    arcrole_type_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_id INTEGER NOT NULL,\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    arcrole_uri TEXT NOT NULL,\n"
          + "    cycles_allowed TEXT NOT NULL,\n"
          + "    definition TEXT\n"
          + ");\n"
          + "CREATE INDEX arcrole_type_index02 ON arcrole_type (document_id);\n"
          + "CREATE INDEX arcrole_type_index03 ON arcrole_type (arcrole_uri);\n";
  static String used_on =
      "CREATE TABLE used_on (\n"
          + "    object_id INTEGER NOT NULL,\n"
          + "    aspect_id INTEGER NOT NULL\n"
          + ");\n"
          + "CREATE INDEX used_on_index01 ON used_on (object_id);\n"
          + "CREATE UNIQUE INDEX used_on_index02 ON used_on (object_id, aspect_id);\n";

  static String resource =
      "CREATE TABLE resource (\n"
          + "    resource_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_id INTEGER NOT NULL,\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    qname TEXT NOT NULL,  -- clark notation qname (do we need this?)\n"
          + "    role TEXT,\n"
          + "    value TEXT,\n"
          + "    xml_lang TEXT\n"
          + ");\n"
          + "CREATE INDEX resource_index01 ON resource  (resource_id);\n"
          + "CREATE INDEX resource_index02 ON resource  (document_id, xml_child_seq);\n";
  static String relationship_set =
      "CREATE TABLE relationship_set (\n"
          + "    relationship_set_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_id INTEGER NOT NULL,\n"
          + "    arc_qname TEXT NOT NULL,  -- clark notation qname (do we need this?)\n"
          + "    link_qname TEXT NOT NULL,  -- clark notation qname (do we need this?)\n"
          + "    arc_role TEXT NOT NULL,\n"
          + "    link_role TEXT NOT NULL\n"
          + ");\n"
          + "CREATE INDEX relationship_set_index02 ON relationship_set (document_id);\n"
          + "CREATE INDEX relationship_set_index03 ON relationship_set (arc_role);\n"
          + "CREATE INDEX relationship_set_index04 ON relationship_set (link_role);\n";
  static String root =
      "CREATE TABLE root (\n"
          + "    relationship_set_id INTEGER NOT NULL,\n"
          + "    relationship_id INTEGER NOT NULL\n"
          + ");\n"
          + "CREATE INDEX root_index01 ON root  (relationship_set_id);\n";
  static String relationship =
      "CREATE TABLE relationship (\n"
          + "    relationship_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    document_id INTEGER NOT NULL,\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    relationship_set_id INTEGER NOT NULL,\n"
          + "    reln_order double precision,\n"
          + "    from_id INTEGER,\n"
          + "    to_id INTEGER,\n"
          + "    calculation_weight double precision,\n"
          + "    tree_sequence integer NOT NULL,\n"
          + "    tree_depth integer NOT NULL,\n"
          + "    preferred_label_role TEXT\n"
          + ");\n"
          + "CREATE INDEX relationship_index02 ON relationship  (relationship_set_id);\n"
          + "CREATE INDEX relationship_index03 ON relationship  (relationship_set_id, tree_depth);\n"
          + "CREATE INDEX relationship_index04 ON relationship  (relationship_set_id, document_id, xml_child_seq);\n"
          + "CREATE INDEX relationship_index05 ON relationship  (from_id);\n";
  static String data_point =
      "CREATE TABLE data_point (\n"
          + "    datapoint_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    report_id INTEGER,\n"
          + "    document_id INTEGER NOT NULL,  -- multiple inline documents are sources of data points\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    source_line integer,\n"
          + "    parent_datapoint_id INTEGER, -- id of tuple parent\n"
          + "    aspect_id INTEGER NOT NULL,\n"
          + "    context_xml_id TEXT, -- (do we need this?)\n"
          + "    entity_identifier_id INTEGER,\n"
          + "    period_id INTEGER,\n"
          + "    aspect_value_selection_id INTEGER,\n"
          + "    unit_id INTEGER,\n"
          + "    is_nil BOOLEAN DEFAULT FALSE,\n"
          + "    precision_value TEXT,\n"
          + "    decimals_value TEXT,\n"
          + "    effective_value double precision,\n"
          + "    value TEXT\n"
          + ");\n"
          + "CREATE INDEX data_point_index02 ON data_point  (document_id, xml_child_seq);\n"
          + "CREATE INDEX data_point_index03 ON data_point  (report_id);\n"
          + "CREATE INDEX data_point_index04 ON data_point  (aspect_id);\n";
  static String entity_identifier =
      "CREATE TABLE entity_identifier (\n"
          + "    entity_identifier_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    report_id INTEGER,\n"
          + "    scheme TEXT NOT NULL,\n"
          + "    identifier TEXT NOT NULL\n"
          + ");\n"
          + "CREATE INDEX entity_identifier_index02 ON entity_identifier (report_id, identifier);\n";
  static String period =
      "CREATE TABLE period (\n"
          + "    period_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    report_id INTEGER,\n"
          + "    start_date TEXT,\n"
          + "    end_date TEXT,\n"
          + "    is_instant BOOLEAN NOT NULL,\n"
          + "    is_forever BOOLEAN NOT NULL\n"
          + ");\n"
          + "CREATE INDEX period_index02 ON period  (report_id, start_date, end_date, is_instant, is_forever);\n";
  static String unit =
      "CREATE TABLE unit (\n"
          + "    unit_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    report_id INTEGER,\n"
          + "    xml_id TEXT,\n"
          + "    xml_child_seq TEXT,\n"
          + "    measures_hash TEXT\n"
          + ");\n"
          + "CREATE INDEX unit_index02 ON unit  (report_id, measures_hash);\n";
  static String unit_measure =
      "CREATE TABLE unit_measure (\n"
          + "    unit_id INTEGER NOT NULL,\n"
          + "    qname TEXT NOT NULL,  -- clark notation qname (do we need this?)\n"
          + "    is_multiplicand BOOLEAN NOT NULL\n"
          + ");\n"
          + "CREATE INDEX unit_measure_index01 ON unit_measure  (unit_id);\n"
          + "CREATE INDEX unit_measure_index02 ON unit_measure  (unit_id, qname, is_multiplicand);\n";
  static String aspect_value_selection_set =
      "CREATE TABLE aspect_value_selection_set (\n"
          + "    aspect_value_selection_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    report_id INTEGER\n"
          + ");\n"
          + "CREATE UNIQUE INDEX aspect_value_sel_set_index01 ON aspect_value_selection_set (aspect_value_selection_id);\n"
          + "CREATE INDEX aspect_value_sel_set_index02 ON aspect_value_selection_set (report_id);\n";
  static String aspect_value_selection =
      "CREATE TABLE aspect_value_selection (\n"
          + "    aspect_value_selection_id INTEGER NOT NULL,\n"
          + "    report_id INTEGER,\n"
          + "    aspect_id INTEGER NOT NULL,\n"
          + "    aspect_value_id INTEGER,\n"
          + "    is_typed_value BOOLEAN NOT NULL,\n"
          + "    typed_value TEXT\n"
          + ");\n"
          + "CREATE INDEX aspect_value_selection_index01 ON aspect_value_selection  (aspect_value_selection_id);\n"
          + "CREATE INDEX aspect_value_selection_index02 ON aspect_value_selection  (aspect_id);\n";
  static String table_data_points =
      "CREATE TABLE table_data_points(\n"
          + "    report_id INTEGER,\n"
          + "    object_id INTEGER NOT NULL, -- may be any role_type or aspect defining a table table with 'seq_object' id\n"
          + "    table_code TEXT,  -- short code of table, like BS, PL, or 4.15.221\n"
          + "    datapoint_id INTEGER -- id of data_point in this table (according to its aspects)\n"
          + ");\n"
          + "CREATE INDEX table_data_points_index01 ON table_data_points  (report_id);\n"
          + "CREATE INDEX table_data_points_index02 ON table_data_points  (table_code);\n"
          + "CREATE INDEX table_data_points_index03 ON table_data_points  (datapoint_id);\n";
  static String message =
      "CREATE TABLE message (\n"
          + "    message_id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
          + "    report_id INTEGER,\n"
          + "    sequence_in_report int,\n"
          + "    message_code TEXT,\n"
          + "    message_level TEXT,\n"
          + "    value TEXT\n"
          + ");\n"
          + "CREATE INDEX message_index02 ON message  (report_id, sequence_in_report);\n";
  static String message_reference =
      "CREATE TABLE message_reference (\n"
          + "    message_id INTEGER NOT NULL,\n"
          + "    object_id INTEGER NOT NULL -- may be any table with 'seq_object' id\n"
          + ");\n"
          + "CREATE INDEX message_reference_index01 ON message_reference  (message_id);\n"
          + "CREATE UNIQUE INDEX message_reference_index02 ON message_reference  (message_id, object_id);\n";
  static String industry =
      "CREATE TABLE industry (\n"
          + "    industry_id INTEGER,\n"
          + "    industry_classification TEXT,\n"
          + "    industry_code integer,\n"
          + "    industry_description TEXT,\n"
          + "    depth integer,\n"
          + "    parent_id INTEGER,\n"
          + "    PRIMARY KEY (industry_id)\n"
          + ");\n";

  static String industry_level =
      "CREATE TABLE industry_level (\n"
          + "    industry_level_id INTEGER,\n"
          + "    industry_classification TEXT,\n"
          + "    ancestor_id INTEGER,\n"
          + "    ancestor_code integer,\n"
          + "    ancestor_depth integer,\n"
          + "    descendant_id INTEGER,\n"
          + "    descendant_code integer,\n"
          + "    descendant_depth integer,\n"
          + "    PRIMARY KEY (industry_level_id)\n"
          + ");\n";
  static String industry_structure =
      "CREATE TABLE industry_structure (\n"
          + "    industry_structure_id INTEGER,\n"
          + "    industry_classification TEXT NOT NULL,\n"
          + "    depth integer NOT NULL,\n"
          + "    level_name TEXT,\n"
          + "    PRIMARY KEY (industry_structure_id)\n"
          + ");\n";
}
